
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.10.2
 * Query Engine version: 5a9203d0590c951969e85a7d07215503f4672eb9
 */
Prisma.prismaVersion = {
  client: "5.10.2",
  engine: "5a9203d0590c951969e85a7d07215503f4672eb9"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AssinaturaScalarFieldEnum = {
  idAssinatura: 'idAssinatura',
  codPagamento: 'codPagamento',
  ativo: 'ativo',
  data_inicio: 'data_inicio',
  ultimo_update: 'ultimo_update',
  idPlanos: 'idPlanos',
  idConta: 'idConta'
};

exports.Prisma.HistoricoPagamentoScalarFieldEnum = {
  idHistoricoPagamento: 'idHistoricoPagamento',
  nome: 'nome',
  descricao: 'descricao',
  pago: 'pago',
  valorTotal: 'valorTotal',
  data_inicio: 'data_inicio',
  idConta: 'idConta'
};

exports.Prisma.PlanosScalarFieldEnum = {
  idPlanos: 'idPlanos',
  nome: 'nome',
  subtitulo: 'subtitulo',
  descricao: 'descricao',
  valorTotal: 'valorTotal',
  tipoFuncionalidade: 'tipoFuncionalidade',
  tipo: 'tipo',
  qtdePessoas: 'qtdePessoas',
  meses: 'meses',
  maxSessoes: 'maxSessoes'
};

exports.Prisma.AutenticacaoScalarFieldEnum = {
  idAutenticacao: 'idAutenticacao',
  email: 'email',
  senha: 'senha',
  idConta: 'idConta'
};

exports.Prisma.ContasScalarFieldEnum = {
  idConta: 'idConta',
  nome: 'nome',
  data_nasc: 'data_nasc',
  foto: 'foto',
  celular: 'celular',
  fagerstrom: 'fagerstrom',
  perfil: 'perfil',
  idQuestionario: 'idQuestionario'
};

exports.Prisma.QuestionarioScalarFieldEnum = {
  idQuestionario: 'idQuestionario',
  questao1: 'questao1',
  questao2: 'questao2',
  questao3: 'questao3',
  questao4: 'questao4',
  questao5: 'questao5',
  questao6: 'questao6'
};

exports.Prisma.GeralScalarFieldEnum = {
  idGeral: 'idGeral',
  emailContato: 'emailContato',
  emailMedico: 'emailMedico',
  numeroContato: 'numeroContato'
};

exports.Prisma.GruposScalarFieldEnum = {
  idGrupo: 'idGrupo',
  dataInicio: 'dataInicio',
  dataFinal: 'dataFinal',
  link: 'link',
  idPlanos: 'idPlanos'
};

exports.Prisma.GrupoContaScalarFieldEnum = {
  idGrupoConta: 'idGrupoConta',
  idGrupo: 'idGrupo',
  idConta: 'idConta'
};

exports.Prisma.DatasScalarFieldEnum = {
  idData: 'idData',
  dia: 'dia',
  hora: 'hora',
  idGrupo: 'idGrupo'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.tipoFuncionalidade = exports.$Enums.tipoFuncionalidade = {
  Nutricao: 'Nutricao',
  Tabaquismo: 'Tabaquismo'
};

exports.tipoPlano = exports.$Enums.tipoPlano = {
  Individual: 'Individual',
  Grupo: 'Grupo',
  Mentoria: 'Mentoria'
};

exports.contas_perfil = exports.$Enums.contas_perfil = {
  Admin: 'Admin',
  Usuario: 'Usuario',
  Nutricionista: 'Nutricionista'
};

exports.dias = exports.$Enums.dias = {
  Segunda: 'Segunda',
  Terca: 'Terca',
  Quarta: 'Quarta',
  Quinta: 'Quinta',
  Sexta: 'Sexta',
  Sabado: 'Sabado',
  Domingo: 'Domingo'
};

exports.Prisma.ModelName = {
  assinatura: 'assinatura',
  historicoPagamento: 'historicoPagamento',
  planos: 'planos',
  autenticacao: 'autenticacao',
  contas: 'contas',
  questionario: 'questionario',
  geral: 'geral',
  grupos: 'grupos',
  grupoConta: 'grupoConta',
  datas: 'datas'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
